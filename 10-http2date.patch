diff --git a/src/net/http/h2_bundle.go b/src/net/http/h2_bundle.go
index ac41144d5b..2d6b79e419 100644
--- a/src/net/http/h2_bundle.go
+++ b/src/net/http/h2_bundle.go
@@ -6422,7 +6422,7 @@ func (rws *http2responseWriterState) writeChunk(p []byte) (n int, err error) {
 		var date string
 		if _, ok := rws.snapHeader["Date"]; !ok {
 			// TODO(bradfitz): be faster here, like net/http? measure.
-			date = rws.conn.srv.now().UTC().Format(TimeFormat)
+			date = string(appendTime(make([]byte, 0, len(TimeFormat)), rws.conn.srv.now().UTC()))
 		}
 
 		for _, v := range rws.snapHeader["Trailer"] {
diff --git a/src/net/http/h2_time.go b/src/net/http/h2_time.go
new file mode 100644
index 0000000000..488a8cb7fe
--- /dev/null
+++ b/src/net/http/h2_time.go
@@ -0,0 +1,27 @@
+package http
+
+import (
+       "time"
+)
+
+// appendTime is a non-allocating version of []byte(t.UTC().Format(TimeFormat))
+func appendTime(b []byte, t time.Time) []byte {
+       const days = "SunMonTueWedThuFriSat"
+       const months = "JanFebMarAprMayJunJulAugSepOctNovDec"
+
+       t = t.UTC()
+       yy, mm, dd := t.Date()
+       hh, mn, ss := t.Clock()
+       day := days[3*t.Weekday():]
+       mon := months[3*(mm-1):]
+
+       return append(b,
+               day[0], day[1], day[2], ',', ' ',
+               byte('0'+dd/10), byte('0'+dd%10), ' ',
+               mon[0], mon[1], mon[2], ' ',
+               byte('0'+yy/1000), byte('0'+(yy/100)%10), byte('0'+(yy/10)%10), byte('0'+yy%10), ' ',
+               byte('0'+hh/10), byte('0'+hh%10), ':',
+               byte('0'+mn/10), byte('0'+mn%10), ':',
+               byte('0'+ss/10), byte('0'+ss%10), ' ',
+               'G', 'M', 'T')
+}

